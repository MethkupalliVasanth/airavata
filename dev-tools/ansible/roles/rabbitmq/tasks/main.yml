#
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

---
################################################################################
# Setup and run rabbitmq

#Install Erlang for RabbitMQ
- name: Install Erlang .deb package from the internet.
  apt:
    deb: http://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb

#Install RabbitMQ using the deb
- name: Install RabbitMQ .deb package from the internet.
  apt:
    deb: http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.9/rabbitmq-server_3.6.9-1_all.deb

- name: check for service status
    shell: sudo service rabbitmqctl status
    ignore_errors: true
    register: servicestatus

- name: Show service service status
    debug:
      msg: 'rabbitmq exists.'
    when: servicestatus.rc | int == 0

  # add hostname to /etc/hosts file
- name: get ip4 address
  # command: dig +short myip.opendns.com @resolver1.opendns.com
  command: hostname -i
  register: _ip4
  when: servicestatus.rc | int == 0

- name: open rabbitmq ports
  firewalld: port={{ item }} zone=public permanent=true state=enabled immediate=yes
  with_items:
    - "{{ rabbitmq_port }}/tcp"
    - "{{ management_plugin_port }}/tcp"
  when: servicestatus.rc | int == 0
  become: yes
 

- name: Edit /etc/hosts file
  lineinfile: dest=/etc/hosts line="{{ _ip4.stdout }} {{ ansible_fqdn }}"
  notify:
    - restart rabbitmq  
  when: servicestatus.rc | int == 0
  become: yes
 

- name: Start Rabbitmq server
  service: name=rabbitmq-server state=started enabled=yes
  when: servicestatus.rc | int == 0
  become: yes

- name: Enable rabbitmq management plugin
  rabbitmq_plugin: names=rabbitmq_management state=enabled
  notify:
    - restart rabbitmq
  when: servicestatus.rc | int == 0
  become: yes

- name: Create rabbitmq vhost {{ rabbitmq_vhost }}
  rabbitmq_vhost: name="{{ rabbitmq_vhost }}" state=present
  when: servicestatus.rc | int == 0
  become: yes

- name: Add user {{ rabbitmq_user }} to vhost {{ rabbitmq_vhost }}  and give permission
  rabbitmq_user: user="{{ rabbitmq_user }}"
                 password="{{ rabbitmq_password }}"
                 vhost="{{ rabbitmq_vhost }}"
                 tags="administrator"
                 configure_priv=.*
                 read_priv=.*
                 write_priv=.*
                 state=present
  when: servicestatus.rc | int == 0
  become: yes

- name: restart rabbitmq
  service: name=rabbitmq-server state=restarted
  when: servicestatus.rc | int == 0
  become: yes

...
